select(subject, response, trial_index) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
pivot_wider(names_from = trial_index, values_from = audio_chek_choice) %>%
distinct()) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback_purpose) %>%
filter(!is.na(feedback_purpose))) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback) %>%
!is.na(feedback))
filter(!is.na(feedback))
filter(!is.na(feedback))
spoken_recall_complete_demographics <- spoken_recall_complete %>%
filter(trial_type1 == "demographics") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "audio_check1") %>%
select(subject, response, trial_index) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
pivot_wider(names_from = trial_index, values_from = audio_chek_choice) %>%
distinct()) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback_purpose) %>%
filter(!is.na(feedback_purpose))) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback) %>%
filter(!is.na(feedback)))
spoken_recall_complete_demographics <- spoken_recall_complete %>%
filter(trial_type1 == "demographics") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "audio_check1") %>%
select(subject, response, trial_index) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
pivot_wider(names_from = trial_index, values_from = audio_chek_choice) %>%
distinct() %>%
rename(audio_check = 6,
audio_check_repeat = 8)) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback_purpose) %>%
filter(!is.na(feedback_purpose))) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback) %>%
filter(!is.na(feedback)))
spoken_recall_complete_demographics <- spoken_recall_complete %>%
filter(trial_type1 == "demographics") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "audio_check1") %>%
select(subject, response, trial_index) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
pivot_wider(names_from = trial_index, values_from = audio_chek_choice) %>%
distinct() %>%
rename(audio_check = "6",
audio_check_repeat = "8")) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback_purpose) %>%
filter(!is.na(feedback_purpose))) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback) %>%
filter(!is.na(feedback)))
spoken_recall_complete_demographics <- spoken_recall_complete %>%
filter(trial_type1 == "demographics") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
rename(hearing_problem = dyslexie) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "audio_check1") %>%
select(subject, response, trial_index) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
pivot_wider(names_from = trial_index, values_from = audio_chek_choice) %>%
distinct() %>%
rename(audio_check = "6",
audio_check_repeat = "8")) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback_purpose) %>%
filter(!is.na(feedback_purpose))) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback) %>%
filter(!is.na(feedback)))
spoken_recall %>%
group_by(subject) %>%
summarise(n = nrow())
spoken_recall %>%
group_by(subject) %>%
summarise(n = nrow(.x))
spoken_recall %>%
group_by(subject) %>%
summarise(n = nrow(.))
spoken_recall_n_trials <- spoken_recall %>%
group_by(subject) %>%
summarise(n = nrow(.))
View(spoken_recall_n_trials)
spoken_recall_n_trials <- spoken_recall %>%
group_by(subject) %>%
summarise(n = n())
spoken_recall_trials <- spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response)
View(spoken_recall_trials)
spoken_recall_trials <- spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, data) %>%
mutate(data = str_remove(data, "[|]"),
data = map(data, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(data))
spoken_recall_complete_demographics <- spoken_recall_complete_demographics %>%
left_join(spoken_recall_trials %>%
distinct(subject, List) %>%
filter(str_starts(List, "exp")))
spoken_recall_complete_demographics %>%
group_by(List) %>%
count()
write_excel_csv(spoken_recall_complete_demographics, "spoken_recall_complete_demographics.csv")
write_excel_csv(spoken_recall_trials, "spoken_recall_trials.csv")
library(tidyverse)
library(jsonlite)
setwd("/Users/james/Library/CloudStorage/OneDrive-FilozofickaÃÅfakulta,UniverzitaKarlova/Conducting_experimental_research_online_2024/Lectures/week_8")
list.files(path = "data/",
pattern = ".csv",
recursive = TRUE,
full.names = TRUE)
list.files(path = "data/",
pattern = ".csv",
recursive = TRUE)
audio_experiment <- list.files(path = "data/",
pattern = ".csv",
recursive = TRUE,
full.names = TRUE) %>%
map_df(~read_csv(.x)) %>%
type_convert()
View(audio_experiment)
decision_data <- audio_experiment %>%
filter(task == "lexical_decision") %>%
select(recorded_at, rt:choices) %>%
mutate(choice = str_remove_all(choices, '\\"|\\[|\\]'))
View(decision_data)
decision_data <- audio_experiment %>%
filter(task == "lexical_decision") %>%
select(recorded_at, rt:choices) %>%
mutate(choice = str_remove_all(choices, '\\"|\\[|\\]')) %>%
separate(choice, into = c("image_0", "image_1", "image_2"), sep = ",")
decision_data <- audio_experiment %>%
filter(task == "lexical_decision") %>%
select(recorded_at, rt:choices) %>%
mutate(choice = str_remove_all(choices, '\\"|\\[|\\]')) %>%
separate(choice, into = c("image_0", "image_1", "image_2"), sep = ",") %>%
mutate(response_image = ifelse(response == 0, image_0,
ifelse(response == 1, image_1,
ifelse(response == 2, image_2, NA))),
response_correct = ifelse(response_image == correct_choice, 1, 0))
demographics <- audio_experiment %>%
filter(task == "demographics") %>%
select(participant_ID, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>%
as.data.frame())) %>%
unnest(response)
View(demographics)
system.time(
spoken_recall <- list.files(path = "raw/", pattern = ".csv", recursive = TRUE, full.names = TRUE) %>%
map_df(~read_csv(.x, show_col_types = FALSE) %>%
mutate(across(.cols = everything(), .fns = as.character))) %>%
type_convert()
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(jsonlite)
system.time(
spoken_recall <- list.files(path = "raw/", pattern = ".csv", recursive = TRUE, full.names = TRUE) %>%
map_df(~read_csv(.x, show_col_types = FALSE) %>%
mutate(across(.cols = everything(), .fns = as.character))) %>%
type_convert()
)
spoken_recall_n_trials <- spoken_recall %>%
group_by(subject) %>%
summarise(n = n())
spoken_recall_participants <- spoken_recall %>%
filter(trial_index == 300) %>%
select(subject)
spoken_recall_complete <- spoken_recall %>%
filter(subject %in% spoken_recall_participants$subject)
spoken_recall_complete_demographics <- spoken_recall_complete %>%
filter(trial_type1 == "demographics") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
rename(hearing_problem = dyslexie) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "audio_check1") %>%
select(subject, response, trial_index) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
pivot_wider(names_from = trial_index, values_from = audio_chek_choice) %>%
distinct() %>%
rename(audio_check = "6",
audio_check_repeat = "8")) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback_purpose) %>%
filter(!is.na(feedback_purpose))) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback) %>%
filter(!is.na(feedback)))
spoken_recall_trials <- spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, data) %>%
mutate(data = str_remove(data, "[|]"),
data = map(data, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(data))
spoken_recall_trials <- spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, data) %>%
mutate(data = str_remove(data, "[|]"),
data = map(data, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(data))
spoken_recall_complete_demographics <- spoken_recall_complete_demographics %>%
left_join(spoken_recall_trials %>%
distinct(subject, List) %>%
filter(str_starts(List, "exp")))
spoken_recall_complete_demographics %>%
group_by(List) %>%
count()
write_excel_csv(spoken_recall_complete_demographics, "spoken_recall_complete_demographics.csv")
write_excel_csv(spoken_recall_trials, "spoken_recall_trials.csv")
View(spoken_recall_complete_demographics)
system.time(
spoken_recall <- list.files(path = "raw/", pattern = ".csv", recursive = TRUE, full.names = TRUE) %>%
map_df(~read_csv(.x, show_col_types = FALSE) %>%
mutate(across(.cols = everything(), .fns = as.character))) %>%
type_convert()
)
spoken_recall_n_trials <- spoken_recall %>%
group_by(subject) %>%
summarise(n = n())
spoken_recall_participants <- spoken_recall %>%
filter(trial_index == 300) %>%
select(subject)
spoken_recall_complete <- spoken_recall %>%
filter(subject %in% spoken_recall_participants$subject)
spoken_recall_complete_demographics <- spoken_recall_complete %>%
filter(trial_type1 == "demographics") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
rename(hearing_problem = dyslexie) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "audio_check1") %>%
select(subject, response, trial_index) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
pivot_wider(names_from = trial_index, values_from = audio_chek_choice) %>%
distinct() %>%
rename(audio_check = "6",
audio_check_repeat = "8")) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback_purpose) %>%
filter(!is.na(feedback_purpose))) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback) %>%
filter(!is.na(feedback)))
spoken_recall_trials <- spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, data) %>%
mutate(data = str_remove(data, "[|]"),
data = map(data, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(data))
spoken_recall_trials <- spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, data) %>%
mutate(data = str_remove(data, "[|]"),
data = map(data, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(data))
spoken_recall_complete_demographics <- spoken_recall_complete_demographics %>%
left_join(spoken_recall_trials %>%
distinct(subject, List) %>%
filter(str_starts(List, "exp")))
spoken_recall_complete_demographics %>%
group_by(List) %>%
count()
write_excel_csv(spoken_recall_complete_demographics, "spoken_recall_complete_demographics.csv")
write_excel_csv(spoken_recall_trials, "spoken_recall_trials.csv")
system.time(
spoken_recall <- list.files(path = "raw/", pattern = ".csv", recursive = TRUE, full.names = TRUE) %>%
map_df(~read_csv(.x, show_col_types = FALSE) %>%
mutate(across(.cols = everything(), .fns = as.character))) %>%
type_convert()
)
spoken_recall_n_trials <- spoken_recall %>%
group_by(subject) %>%
summarise(n = n())
spoken_recall_participants <- spoken_recall %>%
filter(trial_index == 300) %>%
select(subject)
spoken_recall_complete <- spoken_recall %>%
filter(subject %in% spoken_recall_participants$subject)
spoken_recall_complete_demographics <- spoken_recall_complete %>%
filter(trial_type1 == "demographics") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
rename(hearing_problem = dyslexie) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "audio_check1") %>%
select(subject, response, trial_index) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
pivot_wider(names_from = trial_index, values_from = audio_chek_choice) %>%
distinct() %>%
rename(audio_check = "6",
audio_check_repeat = "8")) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback_purpose) %>%
filter(!is.na(feedback_purpose))) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback) %>%
filter(!is.na(feedback)))
spoken_recall_trials <- spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, data) %>%
mutate(data = str_remove(data, "[|]"),
data = map(data, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(data))
spoken_recall_complete_demographics <- spoken_recall_complete_demographics %>%
left_join(spoken_recall_trials %>%
distinct(subject, List) %>%
filter(str_starts(List, "exp")))
spoken_recall_complete_demographics %>%
group_by(List) %>%
count()
write_excel_csv(spoken_recall_complete_demographics, "spoken_recall_complete_demographics.csv")
write_excel_csv(spoken_recall_trials, "spoken_recall_trials.csv")
spoken_recall_complete_demographics %>%
filter(jazyk != "") %>%
group_by(List) %>%
count()
spoken_recall_complete_demographics %>%
filter(jazyk1 != "") %>%
group_by(List) %>%
count()
spoken_recall_complete_demographics %>%
group_by(List) %>%
count()
system.time(
spoken_recall <- list.files(path = "raw/", pattern = ".csv", recursive = TRUE, full.names = TRUE) %>%
map_df(~read_csv(.x, show_col_types = FALSE) %>%
mutate(across(.cols = everything(), .fns = as.character))) %>%
type_convert()
)
spoken_recall_n_trials <- spoken_recall %>%
group_by(subject) %>%
summarise(n = n())
spoken_recall_participants <- spoken_recall %>%
filter(trial_index == 300) %>%
select(subject)
spoken_recall_complete <- spoken_recall %>%
filter(subject %in% spoken_recall_participants$subject)
spoken_recall_complete_demographics <- spoken_recall_complete %>%
filter(trial_type1 == "demographics") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
rename(hearing_problem = dyslexie) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "audio_check1") %>%
select(subject, response, trial_index) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
pivot_wider(names_from = trial_index, values_from = audio_chek_choice) %>%
distinct() %>%
rename(audio_check = "6",
audio_check_repeat = "8")) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback_purpose) %>%
filter(!is.na(feedback_purpose))) %>%
left_join(spoken_recall_complete %>%
filter(trial_type1 == "feedback") %>%
select(subject, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
select(subject, feedback) %>%
filter(!is.na(feedback)))
spoken_recall_trials <- spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, response) %>%
mutate(response = map(response, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(response) %>%
left_join(spoken_recall_complete %>%
filter(task %in% c("recall_practice", "recall")) %>%
select(subject, rt, trial_index, data) %>%
mutate(data = str_remove(data, "[|]"),
data = map(data, ~ fromJSON(.) %>% as.data.frame())) %>%
unnest(data))
spoken_recall_complete_demographics <- spoken_recall_complete_demographics %>%
left_join(spoken_recall_trials %>%
distinct(subject, List) %>%
filter(str_starts(List, "exp")))
spoken_recall_complete_demographics %>%
group_by(List) %>%
count()
write_excel_csv(spoken_recall_complete_demographics, "spoken_recall_complete_demographics.csv")
write_excel_csv(spoken_recall_trials, "spoken_recall_trials.csv")
